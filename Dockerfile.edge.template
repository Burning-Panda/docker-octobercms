FROM php:%%PHP_VERSION%%-%%VARIANT%%

RUN apt-get update && apt-get install -y cron git-core nano \
  libjpeg-dev libmcrypt-dev libpng12-dev libpq-dev libsqlite3-dev && \
  rm -rf /var/lib/apt/lists/* && \
  docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr && \
  docker-php-ext-install gd mcrypt mysqli opcache pdo pdo_pgsql pdo_mysql pdo_sqlite zip

# Recommended opcache settings - https://secure.php.net/manual/en/opcache.installation.php
RUN { \
    echo 'opcache.memory_consumption=128'; \
    echo 'opcache.interned_strings_buffer=8'; \
    echo 'opcache.max_accelerated_files=4000'; \
    echo 'opcache.revalidate_freq=2'; \
    echo 'opcache.fast_shutdown=1'; \
    echo 'opcache.enable_cli=1'; \
  } > /usr/local/etc/php/conf.d/docker-oc-opcache.ini

RUN { \
    echo 'log_errors=on'; \
    echo 'display_errors=off'; \
    echo 'upload_max_filesize=32M'; \
    echo 'post_max_size=32M'; \
    echo 'memory_limit=128M'; \
  } > /usr/local/etc/php/conf.d/docker-oc-php.ini

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
  /usr/local/bin/composer global require hirak/prestissimo

%%VARIANT_EXTRAS%%

COPY config/docker /usr/src/octobercms-config-docker

ENV OCTOBERCMS_TAG %%OCTOBERCMS_TAG%%
ENV OCTOBERCMS_CHECKSUM %%OCTOBERCMS_CHECKSUM%%
ENV OCTOBERCMS_CORE_BUILD %%OCTOBERCMS_CORE_BUILD%%

# Consolidated October CMS setup
RUN curl -o octobercms.tar.gz -fSL https://codeload.github.com/octobercms/october/tar.gz/{$OCTOBERCMS_TAG} && \
  echo "$OCTOBERCMS_CHECKSUM *octobercms.tar.gz" | sha1sum -c - && \
  tar --strip=1 -xzf octobercms.tar.gz && \
  rm octobercms.tar.gz && \
  # drop module dependencies - https://github.com/octobercms/october/issues/2975
  echo "Update composer.json: Drop october module dependencies" && \
  sed -i.orig '/october\/[system|backend|cms]/,+0 d' composer.json && \
  composer install --no-interaction --prefer-dist --no-scripts && \
  # setup docker env
  echo 'APP_ENV=docker' > .env && \
  mv /usr/src/octobercms-config-docker config/docker && \
  # enable edge updates
  sed -i "s/'CMS_EDGE_UPDATES', false/'CMS_EDGE_UPDATES', true/" config/docker/cms.php && \
  # setup database
  touch storage/database.sqlite && \
  chmod 666 storage/database.sqlite && \
  php artisan october:up && \
  # set build params
  php artisan october:util set build && \
  # permissions
  chown -R www-data:www-data /var/www/html

# Initialize crontab for the October CMS scheduler
RUN echo "* * * * * /usr/local/bin/php /var/www/html/artisan schedule:run > /proc/1/fd/1 2>/proc/1/fd/2" > /etc/cron.d/october-cron && \
  crontab /etc/cron.d/october-cron

# Add helpers
RUN echo 'exec php artisan "$@"' > /usr/local/bin/artisan && \
  echo 'exec php artisan tinker' > /usr/local/bin/tinker && \
  echo '[ $# -eq 0 ] && exec php artisan october || exec php artisan october:"$@"' > /usr/local/bin/october && \
  sed -i '1s;^;#!/bin/bash\n[ "$PWD" != "/var/www/html" ] \&\& echo " - Helper must be run from /var/www/html" \&\& exit 1\n;' /usr/local/bin/artisan /usr/local/bin/tinker /usr/local/bin/october && \
  chmod +x /usr/local/bin/artisan /usr/local/bin/tinker /usr/local/bin/october

COPY docker-oc-entrypoint /usr/local/bin/

ENTRYPOINT ["docker-oc-entrypoint"]
CMD ["%%CMD%%"]

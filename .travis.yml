sudo: required
language: bash
services:
  - docker

env:
  matrix:
    - VARIANT=php7.1/apache
      BRANCH=stable
    - VARIANT=php7.1/fpm
      BRANCH=stable
    - VARIANT=php7.0/apache
      BRANCH=stable
    - VARIANT=php7.0/fpm
      BRANCH=stable

    - VARIANT=php7.1/apache
      BRANCH=edge
    - VARIANT=php7.1/fpm
      BRANCH=edge
    - VARIANT=php7.0/apache
      BRANCH=edge
    - VARIANT=php7.0/fpm
      BRANCH=edge

install:
  - git clone https://github.com/docker-library/official-images.git ~/official-images

before_script:
  - docker -v
  - source version
  - IMAGE='aspendigital/octobercms';
    SLASH='/';
    if [ "$BRANCH" == "stable" ]; then
      DOCKERFILE="Dockerfile";
      BUILD="build.$OCTOBERCMS_BUILD";
      TAG="${VARIANT//$SLASH/-}";
      TAG_LONG="$BUILD-$TAG";
    else
      DOCKERFILE="Dockerfile.edge";
      BUILD="edge-build.$OCTOBERCMS_EDGE_BUILD";
      TAG="edge-${VARIANT//$SLASH/-}";
      TAG_LONG="$BUILD-${VARIANT//$SLASH/-}";
    fi;
    echo "$BUILD | $TAG | $DOCKERFILE";
  - cd "$VARIANT"

script:
  - docker build -t "$IMAGE:$TAG" -f $DOCKERFILE .
  - ~/official-images/test/run.sh "$IMAGE:$TAG"
  - docker run --rm "$IMAGE:$TAG" php --version
  - docker run --rm "$IMAGE:$TAG" composer --version
  - docker run --rm "$IMAGE:$TAG" vendor/bin/phpunit

after_success:
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
      docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
      docker push "$IMAGE:$TAG";

      docker build -t "$IMAGE:$TAG_LONG" -f $DOCKERFILE .;
      docker push "$IMAGE:$TAG_LONG";

      if [ "$VARIANT" == "php7.1/apache" ]; then
        docker build -t "$IMAGE:$BUILD" -f $DOCKERFILE .;
        docker push "$IMAGE:$BUILD";

        if [ "$BRANCH" == "stable" ]; then
          docker build -t "$IMAGE:latest" -f $DOCKERFILE .;
          docker push "$IMAGE:latest";
        else
          docker build -t "$IMAGE:edge" -f $DOCKERFILE .;
          docker push "$IMAGE:edge";
        fi
      fi

    fi
  - docker images;
